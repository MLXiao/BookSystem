<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tyut.book.model.User">

  <resultMap type="User" id="userMap">
    <result column="id" property="id"/>
    <result column="username" property="username"/>
    <result column="password" property="password"/>
    <result column="nickname" property="nickname"/>
    <result column="role" property="role"/>
    <result column="phomeNum" property="phomeNum"/>
    <result column="email" property="email"/>
    <result column="balance" property="balance"/>
    <result column="gender" property="gender"/>
    <result column="avatar" property="avatar"/>
    <result column="is_forbidden" property="isForbidden"/>
    <result column="created_time" property="createdTime"/>
    <result column="update_time" property="updateTime"/>
    <result column="is_deleted" property="isDeleted"/>
  </resultMap>

  <resultMap type="com.tyut.book.model.BookCollection" id="collectionMap">
    <result column="user_id" property="userId"/>
    <result column="book_id" property="bookId"/>
    <result column="book_name" property="bookName"/>
    <result column="cover" property="cover"/>
    <result column="created_time" property="createdTime"/>
  </resultMap>

  <resultMap type="com.tyut.book.model.BorrowHistory" id="historyMap">
    <result column="id" property="id"/>
    <result column="borrower_id" property="borrowerId"/>
    <result column="book_id" property="bookId"/>
    <result column="book_name" property="bookName"/>
    <result column="cover" property="cover"/>
    <result column="author" property="author"/>
    <result column="status" property="status"/>
    <result column="created_time" property="createdTime"/>
    <result column="updated_time" property="updatedTime"/>
    <result column="is_deleted" property="isDeleted"/>
  </resultMap>

  <select id="findByName" parameterType="String" resultMap="userMap">
    <![CDATA[
      SELECT * FROM `book_system`.`user`
      WHERE `username` = #{username} 
    ]]>
  </select>

  <insert id="collectBook" parameterType="Map" >
    INSERT INTO `book_system`.`book_collection` (`user_id`, `book_id`) 
        VALUES (#{userId}, #{bookId})
  </insert>

  <select id="getBookCollection" parameterType="Map" resultType="com.tyut.book.model.BookCollection">
    SELECT user_id AS 'userId', book_id AS 'bookId', created_time  
    FROM book_system.book_collection
    WHERE user_id = #{userId}
        AND book_id = #{bookId}
  </select>

  <insert id="createBorrowHistory" parameterType="Map">
    INSERT INTO `book_system`.`borrow_history`(`borrower_id`, `book_id`)
        VALUES (#{userId}, #{bookId})
  </insert>

  <select id="getHistoryId" resultType="int" parameterType="Map">
    SELECT MAX(id) FROM borrow_history WHERE borrower_id = #{userId} AND book_id = #{bookId}
  </select>

  <update id="updateHistoryStatus" parameterType="Map">
  <![CDATA[
    UPDATE borrow_history set status = #{status}
    WHERE id = #{historyId}
  ]]>
  </update>

  <select id="getCollectionCount" parameterType="int" resultType="int">
    SELECT COUNT(*) FROM book_collection
    WHERE user_id = #{userId}
  </select>

  <select id="findCollections" parameterType="Map" resultMap="collectionMap">
    SELECT bc.user_id, bc.book_id AS 'book_id', 
        b.name AS 'book_name', b.cover, bc.created_time
    FROM book_collection bc
    JOIN book b ON bc.book_id = b.id
    WHERE bc.user_id = #{userId}
    LIMIT #{offSet}, #{pageSize}
  </select>

  <delete id="deleteCollection" parameterType="int" >
    DELETE FROM book_collection
    WHERE book_id = #{bookId}
  </delete>

  <select id="getHistoryCount" parameterType="Map" resultType="int">
    SELECT count(*) FROM borrow_history
    WHERE borrower_id = #{userId}
      AND status = #{status}
  </select>

  <select id="findBorrowHistory" parameterType="Map" resultMap="historyMap">
    SELECT bs.id, bs.borrower_id, bs.book_id,
        b.name AS book_name, b.cover, b.author, bs.status,
        bs.created_time, bs.updated_time, bs.is_deleted
    FROM borrow_history bs
        JOIN book b ON bs.book_id = b.id
    WHERE bs.borrower_id = #{userId}
        AND status = #{status}
    LIMIT #{offSet}, #{pageSize}
  </select>

</mapper>
